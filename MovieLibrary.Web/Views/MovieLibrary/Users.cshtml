@model PagedList.IPagedList<MovieLibrary.Web.Models.UserDisplayModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_myLayout.cshtml";
}

<h2>Users</h2>

<p>
    @Html.ActionLink("Add User", "AddUser")
</p>
@if (Model.Count == 0)
{
    <h5>No Users Found!</h5>
}
else
{
    using (Html.BeginForm("Users", "MovieLibrary", FormMethod.Get))
    {
        <p>
            Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].FirstName)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model[0].LastName)*@
                @Html.ActionLink("LastName", "Users", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].IDNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Caption)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model[0].InsertDate)*@
                @Html.ActionLink("InsertDate", "Users", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.PageCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PageNumber)
                </th>*@
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IDNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Caption)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InsertDate)
                </td>

                <td>
                    @Html.ActionLink("Edit", "UserEdit", new { id = item.UserID }, new { @class = "btn btn-primary" }) |
                    @*@Html.ActionLink("Details", "UserDetails", new {  id=item.UserID  }) |*@
                    @Html.ActionLink("Delete", "UserDelete", new { id = item.UserID }, new { @class = "btn btn-danger" }) |
                    @Html.ActionLink("Rent a Movie", "UserRentAMovie", new { id = item.UserID }, new { @class = "btn btn-secondary" }) |
                    @Html.ActionLink("Rented Movies", "RentedMovies", new { id = item.UserID }, new { @class = "btn btn-info" }) |
                    @Html.ActionLink("Watched Movies", "WatchedMovies", new { id = item.UserID }, new { @class = "btn btn-info" }) |
                    @Html.ActionLink("View Wish List", "WishList", new { id = item.UserID }, new { @class = "btn btn-info" })
                </td>
            </tr>
        }

    </table>
}
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@*@Html.PagedListPager(Model, page => Url.Action("Users",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
@Html.PagedListPager(Model, page => Url.Action("Users", new { page }))
