@model MovieLibrary.Web.Models.UserEditModel

@{
    ViewBag.Title = "UserEdit";
    Layout = "~/Views/Shared/_myLayout.cshtml";
}

<h2>User Edit</h2>

@using (Html.BeginForm("UserEdit", "MovieLibrary", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.MaritalStatusID, "Marital Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.DropDownListFor(x => Model.MaritalStatusID, SelectList(Model.MaritalStatuses, "MaritalStatusID", "Caption"), htmlAttributes: new { @class = "form-control", id = "MaritalStatusID" })*@
                @Html.DropDownListFor(model => model.MaritalStatusID, new SelectList(Model.MaritalStatuses, "MaritalStatusID", "Caption"), htmlAttributes: new { @class = "form-control", id = "SelectedMaritalStatusID" })
                @Html.ValidationMessageFor(model => model.MaritalStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsertDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsertDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsertDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DeleteDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeleteDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeleteDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ImageTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <input type="file" class="custom-file-input" id="inputUserFile" name="ImageFile" onchange="onFileSelected(event)">
                @if (!String.IsNullOrEmpty(Model.ImageTitle))
                {
                    <label class="custom-file-label" for="inputUserFile">@Model.ImageTitle</label>
                }
                else
                {
                    <label class="custom-file-label" for="inputUsertFile">Choose file</label>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @{ if (Model.Image.Length > 0)
                    {
                        var base64 = Convert.ToBase64String(Model.Image);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);

                        <img class="img-fluid" id="userImage" height="200" src="@imgSrc">
                    }
                    else
                    {
                        <img class="img-fluid" id="userImage" height="200">
                    }
                }
            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Users List", "Users")
</div>

@section Scripts { 

    <script>   

        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);

        });

        function onFileSelected(event) {
            var selectedFile = event.target.files[0];
            var reader = new FileReader();

            var imgtag = document.getElementById("userImage");
            imgtag.title = selectedFile.name;
            imgtag.alt = selectedFile.name;

            reader.onload = function (event) {
                imgtag.src = event.target.result;
                console.log(imgtag.src);
            };

            reader.readAsDataURL(selectedFile);
        }
    </script>

}